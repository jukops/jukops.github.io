---
layout: post
title:  "기술부채"
date:   2019-05-23 03:04:00
author: Juhyeok Bae
categories: SoftwareCulture
---

# 기술부채
새로운 시스템을 개발하건 유지보수를 하건 보통 두가지 방식으로 일을 접근 하게 된다. 첫번째는 처음부터 잘 준비하여 나름의 완벽한 시스템을 만드는 방법이고, 두번째는 어느정도 타협을 하며 기능 동작에 초점을 맞춰 빠르게 개발 하는 방식이다.

두번째 방법으로 만든 시스템의 경우는 기능 동작은 할지 모르나 추가개발이나 다른시스템과의 연동 그리고 유지보수 측면에서 불리한 구조를 갖는 경우가 많기 때문에 추가개선이 필요하다. 이를 일종의 부채로 볼 수 있는데 Ward Cunningham은 이를 기술부채 라고 표현 하였다.

기술부채도 회계상 부채와 같아서 갚아야 할 원금과 이자를 가지고 있다. 원금은 리펙토링 등으로 깔끔하고 완벽한 시스템을 구축하는것을 뜻하며, 이자는 완벽하지 못한 시스템에 대한 유지보수 비용을 지불 하는것으로 생각할 수 있다. 거대 시스템을 만들고 운영해 보면 처음에는 이자가 적은듯 하지만 시스템이 커지고 새로운 기능이 추가 되고 초기 구축에 참여했던 인력이 나가게 되면 점점 이자는 불어나게 된다. 생각 없이 방치한다면 이자는 겉잡을 수 없이 불어나 원금 상환은 고사하고 모든인력이 이자만 지불해야 하는 상황이 올 수도 있다.

빠르게 개발하는것이 무조건 나쁜것은 아니다. 시스템의 기능 구현이 빠르게 되어야 비즈니스상 이점이 되는 경우가 분명 존재한다. 이때는 앞서 설명한 첫번째 방법보다 두번째 방법인 기능 동작 중심으로 빠르게 개발하는것이 더 좋을것 이다. 하지만 이러한 기술부채를 지고 바로 상환하지 않는 다면 아무도 손댈 수 없는 슈퍼레거시를 만들것이고, 최종적으로는 더 많은 손해를 가져다 줄것이다. 따라서 앞선 이익 보다 기술부채가 얼마나 될지를 잘 고려해 시스템을 구축하고, 구축 후 에도 기술부채를 계속해서 관리하고 갚아 나가는것이 중요하다.
